{"version":3,"sources":["../../../src/server/Controllers/Review.js"],"names":["Review","require","list","req","res","find","sort","bookID","then","review","json","create","authorID","body","authorName","authorSurname","rating","comment","findReview","Promise","resolve","reject","findOne","err","result","status","text","_u","save","error","edit","findByIdAndUpdate","params","id","new","catch","send","destroy","findById","remove","success","exports"],"mappings":"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","sourcesContent":["const Review = require(\"../Models/Review.js\");\n\nconst list = (req, res) => {\n    Review.find()\n        .sort({bookID: 1})\n        .then(review => res.json(review));\n};\n\nconst create = (req, res) => {\n    let review = {\n            authorID: req.body.authorID,\n            authorName: req.body.authorName,\n            authorSurname: req.body.authorSurname,\n            bookID: req.body.bookID,\n            rating: req.body.rating,\n            comment: req.body.comment,\n        },\n        findReview = new Promise((resolve, reject) => {\n            Review.findOne(\n                {\n                    authorID: review.authorID,\n                    bookID: review.bookID,\n                },\n                (err, result) => {\n                    if (err) {\n                        reject(500);\n                    } else if (result) {\n                        res.status(204).json({\n                            text: \"Review already exists\",\n                        });\n                    } else {\n                        resolve(true);\n                    }\n                },\n            );\n        });\n\n    findReview.then(\n        () => {\n            let _u = new Review(review);\n\n            _u.save(err => {\n                if (err) {\n                    res.status(500).json({\n                        text: \"Internal error\",\n                    });\n                } else {\n                    res.status(200).json({\n                        text: \"Review successfuly saved\",\n                    });\n                }\n            });\n        },\n        error => {\n            switch (error) {\n                case 500:\n                    res.status(500).json({\n                        text: \"Internal error\",\n                    });\n                    break;\n                case 204:\n                    res.status(204).json({\n                        text: \"Review already exists\",\n                    });\n                    break;\n                default:\n                    res.status(500).json({\n                        text: \"Internal error\",\n                    });\n            }\n        },\n    );\n};\n\nconst edit = (req, res) => {\n    Review.findByIdAndUpdate(req.params.id, req.body, {new: true})\n        .then(review => res.json(review))\n        .catch(err => res.status(400).send(err));\n};\n\nconst destroy = (req, res) => {\n    Review.findById(req.params.id)\n        .then(review => review.remove().then(() => res.json({success: true})))\n        .catch(err => res.status(404).json(err));\n};\n\n// Exporting methods\nexports.list = list;\nexports.create = create;\nexports.edit = edit;\nexports.destroy = destroy;\n"],"file":"Review.js"}