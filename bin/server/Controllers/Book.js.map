{"version":3,"sources":["../../../src/server/Controllers/Book.js"],"names":["Book","require","list","req","res","find","sort","title","then","books","json","create","newBook","body","author","isbn","language","summary","owner","isBook","isEbook","save","book","catch","err","status","send","edit","findByIdAndUpdate","params","id","new","overwrite","upsert","destroy","findById","remove","success","exports"],"mappings":";;AACA,MAAMA,IAAI,GAAGC,OAAO,CAAC,mBAAD,CAApB;;AAKA,MAAMC,IAAI,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvBJ,EAAAA,IAAI,CAACK,IAAL,GACKC,IADL,CACU;AAACC,IAAAA,KAAK,EAAE;AAAR,GADV,EAEKC,IAFL,CAEUC,KAAK,IAAIL,GAAG,CAACM,IAAJ,CAASD,KAAT,CAFnB;AAGH,CAJD;;AASA,MAAME,MAAM,GAAG,CAACR,GAAD,EAAMC,GAAN,KAAc;AACzB,QAAMQ,OAAO,GAAG,IAAIZ,IAAJ,CAAS;AACrBO,IAAAA,KAAK,EAAEJ,GAAG,CAACU,IAAJ,CAASN,KADK;AAErBO,IAAAA,MAAM,EAAEX,GAAG,CAACU,IAAJ,CAASC,MAFI;AAGrBC,IAAAA,IAAI,EAAEZ,GAAG,CAACU,IAAJ,CAASE,IAHM;AAIrBC,IAAAA,QAAQ,EAAEb,GAAG,CAACU,IAAJ,CAASG,QAJE;AAKrBC,IAAAA,OAAO,EAAEd,GAAG,CAACU,IAAJ,CAASI,OALG;AAMrBC,IAAAA,KAAK,EAAEf,GAAG,CAACU,IAAJ,CAASK,KANK;AAOrBC,IAAAA,MAAM,EAAEhB,GAAG,CAACU,IAAJ,CAASM,MAPI;AAQrBC,IAAAA,OAAO,EAAEjB,GAAG,CAACU,IAAJ,CAASO;AARG,GAAT,CAAhB;AAWAR,EAAAA,OAAO,CACFS,IADL,GAEKb,IAFL,CAEUc,IAAI,IAAIlB,GAAG,CAACM,IAAJ,CAASY,IAAT,CAFlB,EAGKC,KAHL,CAGWC,GAAG,IAAIpB,GAAG,CAACqB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB,CAHlB;AAIH,CAhBD;;AAqBA,MAAMG,IAAI,GAAG,CAACxB,GAAD,EAAMC,GAAN,KAAc;AACvBJ,EAAAA,IAAI,CAAC4B,iBAAL,CAAuBzB,GAAG,CAAC0B,MAAJ,CAAWC,EAAlC,EAAsC3B,GAAG,CAACU,IAA1C,EAAgD;AAC5CkB,IAAAA,GAAG,EAAE,IADuC;AAE5CC,IAAAA,SAAS,EAAE,KAFiC;AAG5CC,IAAAA,MAAM,EAAE;AAHoC,GAAhD,EAKKzB,IALL,CAKUc,IAAI,IAAIlB,GAAG,CAACM,IAAJ,CAASY,IAAT,CALlB,EAMKC,KANL,CAMWC,GAAG,IAAIpB,GAAG,CAACqB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB,CANlB;AAOH,CARD;;AAaA,MAAMU,OAAO,GAAG,CAAC/B,GAAD,EAAMC,GAAN,KAAc;AAC1BJ,EAAAA,IAAI,CAACmC,QAAL,CAAchC,GAAG,CAAC0B,MAAJ,CAAWC,EAAzB,EACKtB,IADL,CACUc,IAAI,IAAIA,IAAI,CAACc,MAAL,GAAc5B,IAAd,CAAmB,MAAMJ,GAAG,CAACM,IAAJ,CAAS;AAAC2B,IAAAA,OAAO,EAAE;AAAV,GAAT,CAAzB,CADlB,EAEKd,KAFL,CAEWC,GAAG,IAAIpB,GAAG,CAACqB,MAAJ,CAAW,GAAX,EAAgBf,IAAhB,CAAqBc,GAArB,CAFlB;AAGH,CAJD;;AAOAc,OAAO,CAACpC,IAAR,GAAeA,IAAf;AACAoC,OAAO,CAAC3B,MAAR,GAAiBA,MAAjB;AACA2B,OAAO,CAACX,IAAR,GAAeA,IAAf;AACAW,OAAO,CAACJ,OAAR,GAAkBA,OAAlB","sourcesContent":["// Book Model\nconst Book = require(\"../Models/Book.js\");\n\n// @route   GET books\n// @desc    get All books\n// @access  Public\nconst list = (req, res) => {\n    Book.find()\n        .sort({title: 1})\n        .then(books => res.json(books));\n};\n\n// @route   POST book\n// @desc    Create A book\n// @access  Admin\nconst create = (req, res) => {\n    const newBook = new Book({\n        title: req.body.title,\n        author: req.body.author,\n        isbn: req.body.isbn,\n        language: req.body.language,\n        summary: req.body.summary,\n        owner: req.body.owner,\n        isBook: req.body.isBook,\n        isEbook: req.body.isEbook,\n    });\n\n    newBook\n        .save()\n        .then(book => res.json(book))\n        .catch(err => res.status(400).send(err));\n};\n\n// @route   PUT book/:id\n// @desc    Update A book\n// @access  Admin\nconst edit = (req, res) => {\n    Book.findByIdAndUpdate(req.params.id, req.body, {\n        new: true,\n        overwrite: false,\n        upsert: true,\n    })\n        .then(book => res.json(book))\n        .catch(err => res.status(400).send(err));\n};\n\n// @route   DELETE book/:id\n// @desc    Delete A book\n// @access  Admin\nconst destroy = (req, res) => {\n    Book.findById(req.params.id)\n        .then(book => book.remove().then(() => res.json({success: true})))\n        .catch(err => res.status(404).json(err));\n};\n\n// Exporting methods\nexports.list = list;\nexports.create = create;\nexports.edit = edit;\nexports.destroy = destroy;\n"],"file":"Book.js"}