{"version":3,"sources":["../../../src/server/Controllers/Tag.js"],"names":["Tag","require","list","req","res","find","sort","title","then","tags","json","create","newTag","tag","body","save","catch","err","status","send","edit","findByIdAndUpdate","params","id","new","destroy","findById","remove","success","exports"],"mappings":";;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,kBAAD,CAAnB;;AAKA,MAAMC,IAAI,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvBJ,EAAAA,GAAG,CAACK,IAAJ,GACKC,IADL,CACU;AAACC,IAAAA,KAAK,EAAE;AAAR,GADV,EAEKC,IAFL,CAEUC,IAAI,IAAIL,GAAG,CAACM,IAAJ,CAASD,IAAT,CAFlB;AAGH,CAJD;;AASA,MAAME,MAAM,GAAG,CAACR,GAAD,EAAMC,GAAN,KAAc;AACzB,QAAMQ,MAAM,GAAG,IAAIZ,GAAJ,CAAQ;AACnBa,IAAAA,GAAG,EAAEV,GAAG,CAACW,IAAJ,CAASD;AADK,GAAR,CAAf;AAIAD,EAAAA,MAAM,CACDG,IADL,GAEKP,IAFL,CAEUK,GAAG,IAAIT,GAAG,CAACM,IAAJ,CAASG,GAAT,CAFjB,EAGKG,KAHL,CAGWC,GAAG,IAAIb,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB,CAHlB;AAIH,CATD;;AAcA,MAAMG,IAAI,GAAG,CAACjB,GAAD,EAAMC,GAAN,KAAc;AACvBJ,EAAAA,GAAG,CAACqB,iBAAJ,CAAsBlB,GAAG,CAACmB,MAAJ,CAAWC,EAAjC,EAAqCpB,GAAG,CAACW,IAAzC,EAA+C;AAACU,IAAAA,GAAG,EAAE;AAAN,GAA/C,EACKhB,IADL,CACUK,GAAG,IAAIT,GAAG,CAACM,IAAJ,CAASG,GAAT,CADjB,EAEKG,KAFL,CAEWC,GAAG,IAAIb,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB,CAFlB;AAGH,CAJD;;AASA,MAAMQ,OAAO,GAAG,CAACtB,GAAD,EAAMC,GAAN,KAAc;AAC1BJ,EAAAA,GAAG,CAAC0B,QAAJ,CAAavB,GAAG,CAACmB,MAAJ,CAAWC,EAAxB,EACKf,IADL,CACUK,GAAG,IAAIA,GAAG,CAACc,MAAJ,GAAanB,IAAb,CAAkB,MAAMJ,GAAG,CAACM,IAAJ,CAAS;AAACkB,IAAAA,OAAO,EAAE;AAAV,GAAT,CAAxB,CADjB,EAEKZ,KAFL,CAEWC,GAAG,IAAIb,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqBO,GAArB,CAFlB;AAGH,CAJD;;AAOAY,OAAO,CAAC3B,IAAR,GAAeA,IAAf;AACA2B,OAAO,CAAClB,MAAR,GAAiBA,MAAjB;AACAkB,OAAO,CAACT,IAAR,GAAeA,IAAf;AACAS,OAAO,CAACJ,OAAR,GAAkBA,OAAlB","sourcesContent":["// Tag Model\nconst Tag = require(\"../Models/Tag.js\");\n\n// @route   GET tags\n// @desc    get All tags\n// @access  Public\nconst list = (req, res) => {\n    Tag.find()\n        .sort({title: 1})\n        .then(tags => res.json(tags));\n};\n\n// @route   POST tag\n// @desc    Create A tag\n// @access  Admin\nconst create = (req, res) => {\n    const newTag = new Tag({\n        tag: req.body.tag,\n    });\n\n    newTag\n        .save()\n        .then(tag => res.json(tag))\n        .catch(err => res.status(400).send(err));\n};\n\n// @route   PUT tag/:id\n// @desc    Update A tag\n// @access  Admin\nconst edit = (req, res) => {\n    Tag.findByIdAndUpdate(req.params.id, req.body, {new: true})\n        .then(tag => res.json(tag))\n        .catch(err => res.status(400).send(err));\n};\n\n// @route   DELETE tag/:id\n// @desc    Delete A book\n// @access  Admin\nconst destroy = (req, res) => {\n    Tag.findById(req.params.id)\n        .then(tag => tag.remove().then(() => res.json({success: true})))\n        .catch(err => res.status(404).json(err));\n};\n\n// Exports des fonctions\nexports.list = list;\nexports.create = create;\nexports.edit = edit;\nexports.destroy = destroy;\n"],"file":"Tag.js"}