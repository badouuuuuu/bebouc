{"version":3,"sources":["../../src/server/index.js"],"names":["mongoose","connect","db","connection","on","console","error","bind","once","log","app","urlencodedParser","bodyParser","urlencoded","extended","use","json","express","static","path","resolve","__dirname","router","Router","require","APP_PORT","process","env","listen"],"mappings":";;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAGAA,kBAASC,OAAT,CAAiB,oOAAjB;;AAEA,MAAMC,EAAE,GAAGF,kBAASG,UAApB;AAEAD,EAAE,CAACE,EAAH,CAAM,OAAN,EAAeC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,mBAA5B,CAAf;AAEAH,EAAE,CAACM,IAAH,CAAQ,MAAR,EAAgB,MAAM;AAClBH,EAAAA,OAAO,CAACI,GAAR,CAAY,4CAAZ;AACH,CAFD;AAKA,MAAMC,GAAG,GAAG,uBAAZ;;AAGA,MAAMC,gBAAgB,GAAGC,oBAAWC,UAAX,CAAsB;AAC3CC,EAAAA,QAAQ,EAAE;AADiC,CAAtB,CAAzB;;AAIAJ,GAAG,CAACK,GAAJ,CAAQJ,gBAAR;AACAD,GAAG,CAACK,GAAJ,CAAQH,oBAAWI,IAAX,EAAR;AACAN,GAAG,CAACK,GAAJ,CAAQ,oBAAR;AAkBAL,GAAG,CAACK,GAAJ,CAAQE,iBAAQC,MAAR,CAAeC,cAAKC,OAAL,CAAaC,SAAb,EAAwB,kBAAxB,CAAf,CAAR;AAGA,MAAMC,MAAM,GAAG,IAAIL,iBAAQM,MAAZ,EAAf;AAEAb,GAAG,CAACK,GAAJ,CAAQ,MAAR,EAAgBO,MAAhB;;AACAE,OAAO,CAAE,GAAEH,SAAU,SAAd,CAAP,CAA+BC,MAA/B;;AAGA,MAAM;AAACG,EAAAA;AAAD,IAAaC,OAAO,CAACC,GAA3B;AAEAjB,GAAG,CAACkB,MAAJ,CAAWH,QAAX,EAAqB,MACjBpB,OAAO,CAACI,GAAR,CAAa,kCAAiCgB,QAAS,GAAvD,CADJ","sourcesContent":["// Dependencies\nimport express from \"express\";\nimport mongoose from \"mongoose\";\nimport bodyParser from \"body-parser\";\nimport path from \"path\";\nimport cors from \"cors\";\n\n// Database connection\nmongoose.connect(\"mongodb://becode:becode@bebouc-shard-00-00-pnqv7.mongodb.net:27017,bebouc-shard-00-01-pnqv7.mongodb.net:27017,bebouc-shard-00-02-pnqv7.mongodb.net:27017/test?ssl=true&replicaSet=Bebouc-shard-0&authSource=admin&retryWrites=true\");\n\nconst db = mongoose.connection;\n\ndb.on(\"error\", console.error.bind(console, \"connection error:\"));\n\ndb.once(\"open\", () => {\n    console.log(\"----------   yeah! connected!   ----------\");\n});\n\n//  Express config\nconst app = express();\n\n// Body Parser config and express protocol\nconst urlencodedParser = bodyParser.urlencoded({\n    extended: true,\n});\n\napp.use(urlencodedParser);\napp.use(bodyParser.json());\napp.use(cors());\n\n// CORS config (even if we aim to deploy product in https)\n// app.use((req, res, next) => {\n//     res.setHeader(\n//         \"Access-Control-Allow-Headers\",\n//         \"X-Requested-With,content-type\",\n//     );\n//     res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n//     res.setHeader(\n//         \"Access-Control-Allow-Methods\",\n//         \"GET, POST, OPTIONS, PUT, PATCH, DELETE\",\n//     );\n//     res.setHeader(\"Access-Control-Allow-Credentials\", true);\n//     next();\n// });\n\n//  ??\napp.use(express.static(path.resolve(__dirname, \"../../bin/client\")));\n\n// Router config\nconst router = new express.Router();\n\napp.use(\"/api\", router);\nrequire(`${__dirname}/routes`)(router);\n\n// Port listener\nconst {APP_PORT} = process.env;\n\napp.listen(APP_PORT, () =>\n    console.log(`ðŸš€ Server is listening on port ${APP_PORT}.`),\n);\n"],"file":"index.js"}